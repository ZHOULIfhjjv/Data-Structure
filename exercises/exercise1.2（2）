#include "stdafx.h"
#include<stdio.h>
#include<malloc.h> 
typedef  struct list 
{  
    int data;  
    struct list * next;   
}list;  
struct list * La=NULL;
struct list * heada=NULL;
struct list * pa=NULL;  
struct list * Lb=NULL;
struct list * headb=NULL;
struct list * pb=NULL; 
struct list * L=NULL;
struct list * q=NULL;
int _tmain(int argc, _TCHAR* argv[])
{
	int i1=0,l1;
	printf("length of input linked list\n");
	scanf("%d",&l1); 
	heada=(struct list *)malloc(sizeof(struct  list)); 
	La=heada;
	printf("enter the contents of the linked list\n");
	for(i1;i1<l1;i1++){
		pa = (struct list *)malloc(sizeof(struct  list));
        scanf("%d",&pa->data);
        pa->next=NULL;
        heada->next=pa;
        heada=pa;
    }
    int i2=0,l2;
	printf("length of input linked list\n");
	scanf("%d",&l2);
	 
	headb=(struct list *)malloc(sizeof(struct  list)); 
	Lb=headb;
	printf("enter the contents of the linked list in turn\n");
	for(i2;i2<l2;i2++){
		pb= (struct list *)malloc(sizeof(struct  list));
        scanf("%d",&pb->data);
        pb->next=NULL;
        headb->next=pb;
        headb=pb;
    }
    pa=La->next; 
	pb=Lb->next;
	L=(struct list *)malloc(sizeof(struct  list));
    L=La;
    L->next=NULL;
	q=(struct list *)malloc(sizeof(struct  list)); 
	while(pa!=NULL||pb!=NULL)
	{
		if(pa==NULL)
		{
			q=pb;
			pb=pb->next;
		}
		else if(pb==NULL)
		{
		    q=pa;
			pa=pa->next;	
		}else if(pa->data<=pb->data)
		{
			q=pa;
			pa=pa->next;
		}else
		{
			q=pb;
			pb=pb->next;
		}
	    q->next = L->next;   
        L->next=q; 
	}
	free(Lb); 
    pa=L->next;
    while(pa!=NULL)
	{
	printf("%d ",pa->data);
	pa=pa->next;
	}
	getchar();
	getchar();
	return 0;
}
